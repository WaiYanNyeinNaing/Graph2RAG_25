events {
    worker_connections 1024;
}

http {
    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Upstream backend
    upstream lightrag_backend {
        server lightrag-backend:9621;
    }

    server {
        listen 80;
        server_name localhost;
        
        # Main proxy configuration
        location / {
            proxy_pass http://lightrag_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Replace LightRAG with Bosch Graph2RAG in all responses
            sub_filter 'LightRAG' 'Bosch Graph2RAG';
            sub_filter 'lightrag' 'Bosch Graph2RAG';
            sub_filter 'Lightrag' 'Bosch Graph2RAG';
            sub_filter 'LIGHTRAG' 'BOSCH GRAPH2RAG';
            
            # Replace in JavaScript strings
            sub_filter '"LightRAG"' '"Bosch Graph2RAG"';
            sub_filter "'LightRAG'" "'Bosch Graph2RAG'";
            
            # Replace logo references
            sub_filter 'logo.png' '/custom-logo.png';
            sub_filter 'favicon.png' '/custom-favicon.png';
            
            # Enable multiple replacements
            sub_filter_once off;
            sub_filter_types text/html text/css text/javascript application/javascript application/json;
        }
        
        # Serve custom logo
        location = /custom-logo.png {
            alias /usr/share/nginx/html/logo.png;
            expires 30d;
            add_header Cache-Control "public, immutable";
        }
        
        location = /custom-favicon.png {
            alias /usr/share/nginx/html/favicon.png;
            expires 30d;
            add_header Cache-Control "public, immutable";
        }
        
        # Handle WebSocket connections for live updates
        location /ws {
            proxy_pass http://lightrag_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
        
        # API endpoints
        location /api/ {
            proxy_pass http://lightrag_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            
            # Replace in API responses
            sub_filter 'LightRAG' 'Bosch Graph2RAG';
            sub_filter_once off;
            sub_filter_types application/json text/plain;
        }
        
        # Health check endpoint
        location /health {
            proxy_pass http://lightrag_backend;
            proxy_set_header Host $host;
            
            # Replace in health check response
            sub_filter 'LightRAG' 'Bosch Graph2RAG';
            sub_filter_once off;
            sub_filter_types application/json;
        }
    }
}